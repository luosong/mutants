webpackJsonp([51],{3:function(n,e,t){n.exports=t(2)(155)},357:function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{"default":n}}Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),d=o(a),c=t(3),r=o(c),l=t(540),h=o(l),s=function(){return d["default"].createElement("div",null,d["default"].createElement(r["default"],{text:h["default"]}))};e["default"]=s},540:function(n,e){n.exports="# 本地开发模式的调试功能\n\n\n\n## 什么是本地开发模式？\n\n　　在开发者的电脑上，启用一个本地的 web service，运行指定本地路径下某个目录下的html,加载图片脚本等资源，运行应用。所有的html,js,css,image等资源都在开发者本地，唯独数据不在本地，是通过访问服务器的接口获取的。\n\n　　那么问题来了，html在本地域下，数据是请求服务器接口获取的，然而这两部分不在同一个域下，那必然要进行跨域访问，本地域如何跨域访问互联网上的服务器？以往我们只能打开浏览器跨域设置，取消掉跨域的限制，这样我们能实现跨域的问题，这在我们的PC电脑上是能够解决的，但是应用如果运行在移动设备的浏览器里时，怎么办？\n\n\n## PC上使用 chanjet-dev-proxy 来解决跨域访问。\n\n`chanjet-dev-proxy` 是一个 npm modules,其作用是建立本地代理，应用中通过一个服务器接口时，首先会转换成一个本地路径的访问，服务器接口地址会作为参数传递到 `chanjet-dev-proxy` 上，然后 `chanjet-dev-proxy` 会访问服务器接口获得数据，然后作为本地路径访问的返回数据，返回给应用。通过这种方式，我们解决了跨域的问题。\n  \n-  ### 如何安装 chanjet-dev-proxy?  \n\n　　在node环境下对 chanjet-dev-proxy 全局安装，运行如下命令行（ps:根据当前用户权限，确实是否需要使用 sudo 命令执行）：\n``` bash\ncnpm install -g chanjet-dev-proxy\n```\n\n\n- 如何运行 chanjet-dev-proxy?\n\n　　在node环境下，运行如下命令行（ps:根据当前用户权限，确实是否需要使用 sudo 命令执行）：\n```bash\nchanjet-dev-proxy\n``` \n　　运行正常会有如下显示，chanjet-dev-proxy会启动一个 web service,占用3001端口：\n```bash\nRuning CORS Anywhere on 0.0.0.0:3001 \n```\n\n## 在移动设备上怎么调试\n\n　　PC本地开发完成后，我们要放到移动设备上进行验证，我们可以通过网络访问PC本地的应用进行调试。\n　　比如电脑IP是 192.168.1.100，应用的本地访问地址为：http://localhost:8080/index.html， 我们先启动移动设备上的浏览器，然后在地址栏输入 http://192.168.1.100:8080/index.html，这样浏览器就可以运行应用了。\n  \n  \n  "}});