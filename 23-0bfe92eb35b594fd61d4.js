webpackJsonp([23],{3:function(e,t,n){e.exports=n(2)(155)},4:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(8),o=r(i);t["default"]=o["default"]},5:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(1),p=r(l),c=n(6),u=n(7),d=r(u),h=n(14),f=r(h),y=n(4),g=r(y),m=function(e){function t(){return i(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return s(t,e),a(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.code,r=e.component,i=e.layoutSideBySide,o=this.context.muiTheme.rawTheme.palette,s=o.canvasColor,a={root:{backgroundColor:s,marginBottom:32},exampleBlock:{borderRadius:"0 0 2px 0",padding:"14px 24px 24px",margin:0,width:i?"45%":null,"float":i?"right":null}},l=r?(0,c.parse)(n):{};return p["default"].createElement(g["default"],{style:a.root},p["default"].createElement(d["default"],{title:this.props.title,description:this.props.description||l.description},n),p["default"].createElement(f["default"],{style:a.exampleBlock},t))}}]),t}(l.Component);m.propTypes={children:l.PropTypes.node,code:l.PropTypes.string.isRequired,component:l.PropTypes.bool,description:l.PropTypes.string,layoutSideBySide:l.PropTypes.bool,title:l.PropTypes.string},m.defaultProps={component:!0},m.contextTypes={muiTheme:l.PropTypes.object},t["default"]=m},6:function(e,t,n){e.exports=n(2)(183)},7:function(e,t,n){e.exports=n(2)(243)},15:function(e,t,n){e.exports=n(2)(245)},192:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function a(e){var t=e.size,n=(0,T.rem2px)(t,!0),r=.1*n;(0,T.rem2px)(e.left,!0),(0,T.rem2px)(e.top,!0);return{root:{width:t,height:t,padding:r,opacity:"hide"===e.status?0:1,transition:"hide"===e.status?g["default"].create("all",".3s","ease-out"):"none"}}}Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(r=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);r=!0);}catch(l){i=!0,o=l}finally{try{!r&&a["return"]&&a["return"]()}finally{if(i)throw o}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(1),d=r(u),h=n(162),f=r(h),y=n(13),g=r(y),m=n(8),x=r(m),T=n(44),v=32,P=function(e){function t(){return i(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return s(t,e),c(t,[{key:"componentDidMount",value:function(){this.componentDidUpdate()}},{key:"componentDidUpdate",value:function(){this.scalePath(this.refs.path,0),this.rotateWrapper(this.refs.wrapper)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.scalePathTimer),clearTimeout(this.rotateWrapperTimer),clearTimeout(this.rotateWrapperSecondTimer)}},{key:"renderChildren",value:function(){var e=this.context.muiTheme.prepareStyles,t=this.getPaperSize(),n=((0,T.px2rem)(t),null);if("ready"!==this.props.status){var r=this.getCircleStyle(t);n=d["default"].createElement("div",{ref:"wrapper",style:e({transition:g["default"].create("transform","20s",null,"linear"),width:"100%",height:"100%"})},d["default"].createElement("svg",{style:{width:"100%",height:"100%"},viewBox:"0 0 "+v+" "+v},d["default"].createElement("circle",p({ref:"path",style:e(Object.assign(r.style,{transition:g["default"].create("all","1.5s",null,"ease-in-out")}))},r.attr))))}else{var i=this.getCircleStyle(t),o=this.getPolygonStyle(t);n=d["default"].createElement("svg",{style:{width:t,height:t},viewBox:"0 0 "+v+" "+v},d["default"].createElement("circle",p({style:e(i.style)},i.attr)),d["default"].createElement("polygon",p({style:e(o.style)},o.attr)))}return n}},{key:"getTheme",value:function(){return this.context.muiTheme.refreshIndicator}},{key:"getPaddingSize",value:function(){var e=.1*(0,T.rem2px)(this.props.size);return e}},{key:"getPaperSize",value:function(){return(0,T.rem2px)(this.props.size)-2*this.getPaddingSize()}},{key:"getCircleAttr",value:function(){return{radiu:v/2-5,originX:v/2,originY:v/2,strokeWidth:3}}},{key:"getArcDeg",value:function(){var e=this.props.percentage/100,t=120*e,n=410*e;return[t,n]}},{key:"getFactor",value:function(){var e=this.props.percentage/100,t=Math.min(1,e/.4);return t}},{key:"getCircleStyle",value:function(){var e="loading"===this.props.status,t=e?1:this.getFactor(),n=this.getCircleAttr(),r=2*Math.PI*n.radiu,i=this.getArcDeg(),o=l(i,2),s=o[0],a=o[1],p=(a-s)*r/360,c=-s*r/360,u=this.getTheme();return{style:{strokeDasharray:p+", "+(r-p),strokeDashoffset:c,stroke:e||100===this.props.percentage?this.props.loadingColor||u.loadingStrokeColor:this.props.color||u.strokeColor,strokeLinecap:"round",opacity:t,strokeWidth:n.strokeWidth*t,fill:"none"},attr:{cx:n.originX,cy:n.originY,r:n.radiu}}}},{key:"getPolygonStyle",value:function(){var e=this.getFactor(),t=this.getCircleAttr(),n=t.originX+t.radiu,r=t.originY,i=7*t.strokeWidth/4*e,o=n-i+","+r+" "+(n+i)+","+r+" "+n+","+(r+i),s=this.getArcDeg(),a=l(s,2),p=a[1],c=this.getTheme();return{style:{fill:100===this.props.percentage?this.props.loadingColor||c.loadingStrokeColor:this.props.color||c.strokeColor,transform:"rotate("+p+"deg)",transformOrigin:t.originX+"px "+t.originY+"px",opacity:e},attr:{points:o}}}},{key:"scalePath",value:function(e,t){var n=this;if("loading"===this.props.status){var r=(t||0)%3,i=this.getCircleAttr(),o=2*Math.PI*i.radiu,s=.64*o,a=void 0,l=void 0,p=void 0;0===r?(a="1, 200",l=0,p="0ms"):1===r?(a=s+", 200",l=-15,p="750ms"):(a=s+", 200",l=-(o-1),p="850ms"),f["default"].set(e.style,"strokeDasharray",a),f["default"].set(e.style,"strokeDashoffset",l),f["default"].set(e.style,"transitionDuration",p),clearTimeout(this.scalePathTimer),this.scalePathTimer=setTimeout(function(){return n.scalePath(e,r+1)},r?750:250)}}},{key:"rotateWrapper",value:function(e){var t=this;"loading"===this.props.status&&(f["default"].set(e.style,"transform",null),f["default"].set(e.style,"transform","rotate(0deg)"),f["default"].set(e.style,"transitionDuration","0ms"),clearTimeout(this.rotateWrapperTimer),clearTimeout(this.rotateWrapperSecondTimer),this.rotateWrapperSecondTimer=setTimeout(function(){f["default"].set(e.style,"transform","rotate(1800deg)"),f["default"].set(e.style,"transitionDuration","10s"),f["default"].set(e.style,"transitionTimingFunction","linear")},50),this.rotateWrapperTimer=setTimeout(function(){return t.rotateWrapper(e)},10050))}},{key:"render",value:function(){var e=this.props.style,t=a(this.props,this.context);return d["default"].createElement(x["default"],{circle:!0,style:Object.assign(t.root,e),ref:"indicatorCt"},this.renderChildren())}}]),t}(d["default"].Component);P.propTypes={color:d["default"].PropTypes.string,left:d["default"].PropTypes.string,loadingColor:d["default"].PropTypes.string,percentage:d["default"].PropTypes.number,size:d["default"].PropTypes.string,status:d["default"].PropTypes.oneOf(["ready","loading","hide"]),style:d["default"].PropTypes.object,top:d["default"].PropTypes.string},P.defaultProps={percentage:0,size:"1rem",status:"hide"},P.contextTypes={muiTheme:d["default"].PropTypes.object.isRequired},t["default"]=P},460:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),o=r(i),s=n(192),a=r(s),l={container:{position:"relative"},refresh:{display:"inline-block",position:"relative",margin:"20px"}},p=function(){return o["default"].createElement("div",{style:l.container},o["default"].createElement(a["default"],{size:"1.6rem",status:"loading",style:l.refresh}),o["default"].createElement(a["default"],{size:"1.2rem",loadingColor:"#FF9800",status:"loading",style:l.refresh}))};t["default"]=p},461:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),o=r(i),s=n(192),a=r(s),l={container:{position:"relative"},refresh:{display:"inline-block",position:"relative",margin:"5px"}},p=function(){return o["default"].createElement("div",{style:l.container},o["default"].createElement(a["default"],{percentage:30,size:"1rem",status:"ready",style:l.refresh}),o["default"].createElement(a["default"],{percentage:60,size:"2rem",status:"ready",style:l.refresh}),o["default"].createElement(a["default"],{percentage:80,size:"2.5rem",color:"red",status:"ready",style:l.refresh}),o["default"].createElement(a["default"],{percentage:100,size:"3rem",color:"red",status:"ready",style:l.refresh}))};t["default"]=p},462:function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),o=r(i),s=n(16),a=r(s),l=n(5),p=r(l),c=n(15),u=r(c),d=n(3),h=r(d),f=n(647),y=r(f),g=n(461),m=r(g),x=n(646),T=r(x),v=n(460),P=r(v),S=n(645),b=r(S),k=n(679),w=r(k),C={ready:'The `ready` status can be used in response to a pull-to-refresh action, with the `percentage` tracking the depth of the "pull". The `size` property determines the icon size in pixels, and the `color` property its color, except at `percentage` 100, when the colour switches to the secondary color.',loading:"The `loading` status displays an indeterminate indicator, intended to to be used while content is loading. The `loadingColor` prop can be used to set the indicator color, which defaults to the secondary color."},E=function(){return o["default"].createElement("div",null,o["default"].createElement(a["default"],{render:function(e){return"Refresh Indicator - "+e}}),o["default"].createElement(h["default"],{text:y["default"]}),o["default"].createElement(p["default"],{title:"Ready",description:C.ready,code:T["default"]},o["default"].createElement(m["default"],null)),o["default"].createElement(p["default"],{title:"Loading",description:C.loading,code:b["default"]},o["default"].createElement(P["default"],null)),o["default"].createElement(u["default"],{code:w["default"]}))};t["default"]=E},645:function(e,t){e.exports="import React from 'react';\nimport Loading from 'chanjet-ui/lib/Loading';\n\nconst style = {\n  container: {\n    position: 'relative',\n  },\n  refresh: {\n    display: 'inline-block',\n    position: 'relative',\n    margin: '20px'\n  },\n};\n\nconst RefreshIndicatorExampleLoading = () => (\n  <div style={style.container}>\n    <Loading\n      size=\"1.6rem\"\n      status=\"loading\"\n      style={style.refresh}\n    />\n    <Loading\n      size=\"1.2rem\"\n      loadingColor={\"#FF9800\"}\n      status=\"loading\"\n      style={style.refresh}\n    />\n  </div>\n);\n\nexport default RefreshIndicatorExampleLoading;\n"},646:function(e,t){e.exports='import React from \'react\';\nimport Loading from \'chanjet-ui/lib/Loading\';\n\nconst style = {\n  container: {\n    position: \'relative\',\n  },\n  refresh: {\n    display: \'inline-block\',\n    position: \'relative\',\n    margin: \'5px\'\n  },\n};\n\nconst RefreshIndicatorExampleSimple = () => (\n  <div style={style.container}>\n    <Loading\n      percentage={30}\n      size="1rem"\n      status="ready"\n      style={style.refresh}\n    />\n    <Loading\n      percentage={60}\n      size="2rem"\n      status="ready"\n      style={style.refresh}\n    />\n    <Loading\n      percentage={80}\n      size="2.5rem"\n      color={"red"}\n      status="ready"\n      style={style.refresh}\n    />\n    <Loading\n      percentage={100}\n      size="3rem"\n      color={"red"} // Overridden by percentage={100}\n      status="ready"\n      style={style.refresh}\n    />\n  </div>\n);\n\nexport default RefreshIndicatorExampleSimple;\n'},647:function(e,t){e.exports="## Loading\nThe [Loading](https://www.google.com/design/spec/components/progress-activity.html#)\nis used when showing an item is loading. It is kept hidden from the interface until it's\nstatus prop is changed to `loading` or `ready`.\n\n### Examples\n"},679:function(e,t){e.exports="import React from 'react';\nimport autoPrefix from '../utils/autoPrefix';\nimport transitions from '../styles/transitions';\nimport Paper from '../Paper';\n//import px2rem from '../utils/px2rem'\nimport {px2rem, rem2px} from '../utils/pixel'\n\nconst VIEWBOX_SIZE = 32;\n\nfunction getStyles(props) {\n  const size = props.size;\n  const pxSize = rem2px(size,true);\n  const padding = pxSize * 0.1; // same implementation of `this.getPaddingSize()`\n  const left = rem2px(props.left,true);\n  const top = rem2px(props.top,true);\n  return {\n    root: {\n     // position: 'absolute',\n     // zIndex: 2,\n      width: size,\n      height: size,\n      padding: padding,\n      //top: -10000,\n      //left: -10000,\n      //transform: `translate3d(${10000 + left}px, ${10000 + top}px, 0)`,\n      opacity: props.status === 'hide' ? 0 : 1,\n      transition: props.status === 'hide' ? transitions.create('all', '.3s', 'ease-out') : 'none',\n    },\n  };\n}\n\nclass RefreshIndicator extends React.Component {\n  static propTypes = {\n    /**\n     * Override the theme's color of the indicator while it's status is\n     * \"ready\" and it's percentage is less than 100.\n     */\n    color: React.PropTypes.string,\n\n    /**\n     * The absolute left position of the indicator in pixels.\n     */\n    left: React.PropTypes.string,\n\n    /**\n     * Override the theme's color of the indicator while\n     * it's status is \"loading\" or when it's percentage is 100.\n     */\n    loadingColor: React.PropTypes.string,\n\n    /**\n     * The confirmation progress to fetch data. Max value is 100.\n     */\n    percentage: React.PropTypes.number,\n\n    /**\n     * Size in pixels.\n     */\n    size: React.PropTypes.string,\n\n    /**\n     * The display status of the indicator. If the status is\n     * \"ready\", the indicator will display the ready state\n     * arrow. If the status is \"loading\", it will display\n     * the loading progress indicator. If the status is \"hide\",\n     * the indicator will be hidden.\n     */\n    status: React.PropTypes.oneOf(['ready', 'loading', 'hide']),\n\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: React.PropTypes.object,\n\n    /**\n     * The absolute top position of the indicator in pixels.\n     */\n    top: React.PropTypes.string,\n  };\n\n  static defaultProps = {\n    percentage: 0,\n    size: '1rem',\n    status: 'hide',\n  };\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    this.scalePath(this.refs.path, 0);\n    this.rotateWrapper(this.refs.wrapper);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.scalePathTimer);\n    clearTimeout(this.rotateWrapperTimer);\n    clearTimeout(this.rotateWrapperSecondTimer);\n  }\n\n  renderChildren() {\n    const {prepareStyles} = this.context.muiTheme;\n    const paperSize = this.getPaperSize();\n    const paperSizeRem = px2rem(paperSize);\n\n    let childrenCmp = null;\n    if (this.props.status !== 'ready') {\n      const circleStyle = this.getCircleStyle(paperSize);\n      childrenCmp = (\n        <div ref=\"wrapper\" style={prepareStyles({\n          transition: transitions.create('transform', '20s', null, 'linear'),\n          width: '100%',\n          height: '100%',\n        })}\n        >\n          <svg style={{\n            width: '100%',\n            height: '100%',\n          }}\n            viewBox={`0 0 ${VIEWBOX_SIZE} ${VIEWBOX_SIZE}`}\n          >\n            <circle ref=\"path\"\n              style={prepareStyles(Object.assign(circleStyle.style, {\n                transition: transitions.create('all', '1.5s', null, 'ease-in-out'),\n              }))}\n              {...circleStyle.attr}\n            />\n          </svg>\n        </div>\n      );\n    } else {\n      const circleStyle = this.getCircleStyle(paperSize);\n      const polygonStyle = this.getPolygonStyle(paperSize);\n      childrenCmp = (\n        <svg style={{\n          width: paperSize,\n          height: paperSize,\n        }}\n          viewBox={`0 0 ${VIEWBOX_SIZE} ${VIEWBOX_SIZE}`}\n        >\n          <circle\n            style={prepareStyles(circleStyle.style)}\n            {...circleStyle.attr}\n          >\n          </circle>\n          <polygon\n            style={prepareStyles(polygonStyle.style)}\n            {...polygonStyle.attr}\n          />\n        </svg>\n      );\n    }\n\n    return childrenCmp;\n  }\n\n  getTheme() {\n    return this.context.muiTheme.refreshIndicator;\n  }\n\n  getPaddingSize() {\n    const padding = rem2px(this.props.size) * 0.1;\n    return padding;\n  }\n\n  getPaperSize() {\n    return rem2px(this.props.size) - this.getPaddingSize() * 2;\n  }\n\n  getCircleAttr() {\n    return {\n      radiu: VIEWBOX_SIZE / 2 - 5,\n      originX: VIEWBOX_SIZE / 2,\n      originY: VIEWBOX_SIZE / 2,\n      strokeWidth: 3,\n    };\n  }\n\n  getArcDeg() {\n    const p = this.props.percentage / 100;\n\n    const beginDeg = p * 120;\n    const endDeg = p * 410;\n    return [beginDeg, endDeg];\n  }\n\n  getFactor() {\n    const p = this.props.percentage / 100;\n    const p1 = Math.min(1, p / 0.4);\n\n    return p1;\n  }\n\n  getCircleStyle() {\n    const isLoading = this.props.status === 'loading';\n    const p1 = isLoading ? 1 : this.getFactor();\n    const circle = this.getCircleAttr();\n    const perimeter = Math.PI * 2 * circle.radiu;\n\n    const [beginDeg, endDeg] = this.getArcDeg();\n    const arcLen = (endDeg - beginDeg) * perimeter / 360;\n    const dashOffset = -beginDeg * perimeter / 360;\n\n    const theme = this.getTheme();\n    return {\n      style: {\n        strokeDasharray: `${arcLen}, ${(perimeter - arcLen)}`,\n        strokeDashoffset: dashOffset,\n        stroke: (isLoading || this.props.percentage === 100) ?\n          (this.props.loadingColor || theme.loadingStrokeColor) :\n          (this.props.color || theme.strokeColor),\n        strokeLinecap: 'round',\n        opacity: p1,\n        strokeWidth: circle.strokeWidth * p1,\n        fill: 'none',\n      },\n      attr: {\n        cx: circle.originX,\n        cy: circle.originY,\n        r: circle.radiu,\n      },\n    };\n  }\n\n  getPolygonStyle() {\n    const p1 = this.getFactor();\n    const circle = this.getCircleAttr();\n\n    const triangleCx = circle.originX + circle.radiu;\n    const triangleCy = circle.originY;\n    const dx = (circle.strokeWidth * 7 / 4) * p1;\n    const trianglePath = `${(triangleCx - dx)},${triangleCy} ${(triangleCx + dx)},${\n      triangleCy} ${triangleCx},${(triangleCy + dx)}`;\n\n    const [, endDeg] = this.getArcDeg();\n\n    const theme = this.getTheme();\n    return {\n      style: {\n        fill: this.props.percentage === 100 ?\n          (this.props.loadingColor || theme.loadingStrokeColor) :\n          (this.props.color || theme.strokeColor),\n        transform: `rotate(${endDeg}deg)`,\n        transformOrigin: `${circle.originX}px ${circle.originY}px`,\n        opacity: p1,\n      },\n      attr: {\n        points: trianglePath,\n      },\n    };\n  }\n\n  scalePath(path, step) {\n    if (this.props.status !== 'loading') return;\n\n    const currStep = (step || 0) % 3;\n\n    const circle = this.getCircleAttr();\n    const perimeter = Math.PI * 2 * circle.radiu;\n    const arcLen = perimeter * 0.64;\n\n    let strokeDasharray;\n    let strokeDashoffset;\n    let transitionDuration;\n\n    if (currStep === 0) {\n      strokeDasharray = '1, 200';\n      strokeDashoffset = 0;\n      transitionDuration = '0ms';\n    } else if (currStep === 1) {\n      strokeDasharray = `${arcLen}, 200`;\n      strokeDashoffset = -15;\n      transitionDuration = '750ms';\n    } else {\n      strokeDasharray = `${arcLen}, 200`;\n      strokeDashoffset = -(perimeter - 1);\n      transitionDuration = '850ms';\n    }\n\n    autoPrefix.set(path.style, 'strokeDasharray', strokeDasharray);\n    autoPrefix.set(path.style, 'strokeDashoffset', strokeDashoffset);\n    autoPrefix.set(path.style, 'transitionDuration', transitionDuration);\n\n    //fix when parent component change state , makes this components display incorrect;\n    clearTimeout(this.scalePathTimer);\n\n    this.scalePathTimer = setTimeout(() => this.scalePath(path, currStep + 1), currStep ? 750 : 250);\n  }\n\n  rotateWrapper(wrapper) {\n\n    if (this.props.status !== 'loading') return;\n\n    autoPrefix.set(wrapper.style, 'transform', null);\n    autoPrefix.set(wrapper.style, 'transform', 'rotate(0deg)');\n    autoPrefix.set(wrapper.style, 'transitionDuration', '0ms');\n\n    //fix when parent component change state , makes this components display incorrect;\n    clearTimeout(this.rotateWrapperTimer);\n    clearTimeout(this.rotateWrapperSecondTimer);\n\n    this.rotateWrapperSecondTimer = setTimeout(() => {\n      autoPrefix.set(wrapper.style, 'transform', 'rotate(1800deg)');\n      autoPrefix.set(wrapper.style, 'transitionDuration', '10s');\n      autoPrefix.set(wrapper.style, 'transitionTimingFunction', 'linear');\n    }, 50);\n\n    this.rotateWrapperTimer = setTimeout(() => this.rotateWrapper(wrapper), 10050);\n  }\n\n  render() {\n    const {style} = this.props;\n    const styles = getStyles(this.props, this.context);\n\n    return (\n      <Paper\n        circle={true}\n        style={Object.assign(styles.root, style)}\n        ref=\"indicatorCt\"\n      >\n        {this.renderChildren()}\n      </Paper>\n    );\n  }\n}\n\nexport default RefreshIndicator;\n"}});