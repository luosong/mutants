webpackJsonp([14],{3:function(e,t,n){e.exports=n(2)(155)},4:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(8),a=o(l);t["default"]=a["default"]},5:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),s=n(1),u=o(s),c=n(6),d=n(7),p=o(d),f=n(13),m=o(f),h=n(4),b=o(h),y=function(e){function t(){return l(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return r(t,e),i(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.code,o=e.component,l=e.layoutSideBySide,a=this.context.muiTheme.rawTheme.palette,r=a.canvasColor,i={root:{backgroundColor:r,marginBottom:32},exampleBlock:{borderRadius:"0 0 2px 0",padding:"14px 24px 24px",margin:0,width:l?"45%":null,"float":l?"right":null}},s=o?(0,c.parse)(n):{};return u["default"].createElement(b["default"],{style:i.root},u["default"].createElement(p["default"],{title:this.props.title,description:this.props.description||s.description},n),u["default"].createElement(m["default"],{style:i.exampleBlock},t))}}]),t}(s.Component);y.propTypes={children:s.PropTypes.node,code:s.PropTypes.string.isRequired,component:s.PropTypes.bool,description:s.PropTypes.string,layoutSideBySide:s.PropTypes.bool,title:s.PropTypes.string},y.defaultProps={component:!0},y.contextTypes={muiTheme:s.PropTypes.object},t["default"]=y},6:function(e,t,n){e.exports=n(2)(183)},7:function(e,t,n){e.exports=n(2)(243)},14:function(e,t,n){e.exports=n(2)(245)},33:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(42),a=o(l);t["default"]=a["default"]},42:function(e,t,n){e.exports=n(2)(248)},81:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(1),a=o(l),r=n(10),i=o(r),s=n(9),u=o(s),c=function(e){return a["default"].createElement(u["default"],e,a["default"].createElement("path",{d:"M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z"}))};c=(0,i["default"])(c),c.displayName="ActionAndroid",c.muiName="SvgIcon",t["default"]=c},414:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(1),a=o(l),r=n(44),i=o(r),s=n(33),u=o(s),c=n(81),d=o(c),p={exampleImageInput:{cursor:"pointer",position:"absolute",top:0,bottom:0,right:0,left:0,width:"100%",opacity:0}},f=function(){return a["default"].createElement("div",null,a["default"].createElement(i["default"],{label:"Choose an Image",labelPosition:"before"},a["default"].createElement("input",{type:"file",style:p.exampleImageInput})),a["default"].createElement(i["default"],{label:"Label before",labelPosition:"before",primary:!0,style:p.button,icon:a["default"].createElement(d["default"],null)}),a["default"].createElement(i["default"],{href:"https://github.com/",label:"GitHub Link",secondary:!0,icon:a["default"].createElement(u["default"],{className:"muidocs-icon-custom-github"})}))};t["default"]=f},415:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(1),a=o(l),r=n(44),i=o(r),s=n(33),u=o(s),c=n(81),d=o(c),p=n(30),f={margin:12},m=function(){return a["default"].createElement("div",null,a["default"].createElement(i["default"],{icon:a["default"].createElement(d["default"],null),style:f}),a["default"].createElement(i["default"],{backgroundColor:"#a4c639",hoverColor:"#8AA62F",icon:a["default"].createElement(d["default"],{color:p.fullWhite}),style:f}),a["default"].createElement(i["default"],{href:"https://github.com/",secondary:!0,icon:a["default"].createElement(u["default"],{className:"muidocs-icon-custom-github"}),style:f}))};t["default"]=m},416:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(1),a=o(l),r=n(44),i=o(r),s=function(){return a["default"].createElement("div",null,a["default"].createElement(i["default"],{label:"Default"}),a["default"].createElement(i["default"],{label:"Primary",primary:!0}),a["default"].createElement(i["default"],{label:"Secondary",secondary:!0}),a["default"].createElement(i["default"],{label:"Disabled",disabled:!0}))};t["default"]=s},417:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(1),a=o(l),r=n(15),i=o(r),s=n(5),u=o(s),c=n(14),d=o(c),p=n(3),f=o(p),m=n(595),h=o(m),b=n(594),y=o(b),v=n(416),g=o(v),x=n(592),C=o(x),T=n(414),F=o(T),E=n(593),P=o(E),B=n(415),R=o(B),w=n(659),S=o(w),_={simple:"`FlatButton` with default color, `primary`, `secondary` and and `disabled` props applied.",complex:"The first example uses an `input` as a child component, the next has next has an [SVG Icon](/#/components/svg-icon), with the label positioned after. The final example uses a [Font Icon](/#/components/font-icon), and is wrapped in an anchor tag.",icon:"Examples of Flat Buttons using an icon without a label. The first example uses an [SVG Icon](/#/components/svg-icon), and has the default color. The second example shows how the icon and background color can be changed. The final example uses a [Font Icon](/#/components/font-icon), and is wrapped in an anchor tag."},M=function(){return a["default"].createElement("div",null,a["default"].createElement(i["default"],{render:function(e){return"Flat Button - "+e}}),a["default"].createElement(f["default"],{text:h["default"]}),a["default"].createElement(u["default"],{title:"Simple examples",description:_.simple,code:y["default"]},a["default"].createElement(g["default"],null)),a["default"].createElement(u["default"],{title:"Complex examples",description:_.complex,code:C["default"]},a["default"].createElement(F["default"],null)),a["default"].createElement(u["default"],{title:"Icon examples",description:_.icon,code:P["default"]},a["default"].createElement(R["default"],null)),a["default"].createElement(d["default"],{code:S["default"]}))};t["default"]=M},592:function(e,t){e.exports='import React from \'react\';\nimport FlatButton from \'chanjet-ui/lib/FlatButton\';\nimport FontIcon from \'chanjet-ui/lib/FontIcon\';\nimport ActionAndroid from \'chanjet-ui/lib/svg-icons/action/android\';\n\nconst styles = {\n    exampleImageInput: {\n        cursor  : \'pointer\',\n        position: \'absolute\',\n        top     : 0,\n        bottom  : 0,\n        right   : 0,\n        left    : 0,\n        width   : \'100%\',\n        opacity : 0,\n    },\n};\n\nconst FlatButtonExampleComplex = () => (\n    <div>\n        <FlatButton label="Choose an Image" labelPosition="before">\n            <input type="file" style={styles.exampleImageInput}/>\n        </FlatButton>\n\n        <FlatButton\n            label="Label before"\n            labelPosition="before"\n            primary={true}\n            style={styles.button}\n            icon={<ActionAndroid />}\n        />\n\n        <FlatButton\n            href="https://github.com/"\n            label="GitHub Link"\n            secondary={true}\n            icon={<FontIcon className="muidocs-icon-custom-github" />}\n        />\n\n    </div>\n);\n\nexport default FlatButtonExampleComplex;\n'},593:function(e,t){e.exports="import React from 'react';\nimport FlatButton from 'chanjet-ui/lib/FlatButton';\nimport FontIcon from 'chanjet-ui/lib/FontIcon';\nimport ActionAndroid from 'chanjet-ui/lib/svg-icons/action/android';\nimport {fullWhite} from 'chanjet-ui/lib/styles/colors';\n\nconst style = {\n  margin: 12,\n};\n\nconst FlatButtonExampleIcon = () => (\n  <div>\n    <FlatButton\n      icon={<ActionAndroid />}\n      style={style}\n    />\n    <FlatButton\n      backgroundColor=\"#a4c639\"\n      hoverColor=\"#8AA62F\"\n      icon={<ActionAndroid color={fullWhite} />}\n      style={style}\n    />\n    <FlatButton\n      href=\"https://github.com/\"\n      secondary={true}\n      icon={<FontIcon className=\"muidocs-icon-custom-github\" />}\n      style={style}\n    />\n  </div>\n);\n\nexport default FlatButtonExampleIcon;\n"},594:function(e,t){e.exports='import React from \'react\';\nimport FlatButton from \'chanjet-ui/lib/FlatButton\';\n\nconst FlatButtonExampleSimple = () => (\n  <div>\n    <FlatButton label="Default" />\n    <FlatButton label="Primary" primary={true} />\n    <FlatButton label="Secondary" secondary={true} />\n    <FlatButton label="Disabled" disabled={true} />\n  </div>\n);\n\nexport default FlatButtonExampleSimple;\n'},595:function(e,t){e.exports="## 扁平按钮\n\n[Flat Buttons](https://www.google.com/design/spec/components/buttons.html#buttons-flat-raised-buttons)\n容入到容器背景中.\n\n### Examples\n"},659:function(e,t){e.exports="import React from 'react';\nimport transitions from '../styles/transitions';\nimport {createChildFragment} from '../utils/childUtils';\nimport {fade} from '../utils/colorManipulator';\nimport EnhancedButton from '../internal/EnhancedButton';\nimport FlatButtonLabel from './FlatButtonLabel';\nimport px2rem from '../utils/px2rem';\n\nfunction validateLabel(props, propName, componentName) {\n  if (!props.children && !props.label && !props.icon) {\n    return new Error(`Required prop label or children or icon was not specified in ${componentName}.`);\n  }\n}\n\nclass FlatButton extends React.Component {\n  static muiName = 'FlatButton';\n\n  static propTypes = {\n    /**\n     * Color of button when mouse is not hovering over it.\n     */\n    backgroundColor: React.PropTypes.string,\n\n    /**\n     * This is what will be displayed inside the button.\n     * If a label is specified, the text within the label prop will\n     * be displayed. Otherwise, the component will expect children\n     * which will then be displayed. (In our example,\n     * we are nesting an `<input type=\"file\" />` and a `span`\n     * that acts as our label to be displayed.) This only\n     * applies to flat and raised buttons.\n     */\n    children: React.PropTypes.node,\n\n    /**\n     * Disables the button if set to true.\n     */\n    disabled: React.PropTypes.bool,\n\n    /**\n     * Color of button when mouse hovers over.\n     */\n    hoverColor: React.PropTypes.string,\n\n    /**\n     * URL to link to when button clicked if `linkButton` is set to true.\n     */\n    href: React.PropTypes.string,\n\n    /**\n     * Use this property to display an icon.\n     */\n    icon: React.PropTypes.node,\n\n    /**\n     * Label for the button.\n     */\n    label: validateLabel,\n\n    /**\n     * Place label before or after the passed children.\n     */\n    labelPosition: React.PropTypes.oneOf([\n      'before',\n      'after',\n    ]),\n\n    /**\n     * Override the inline-styles of the button's label element.\n     */\n    labelStyle: React.PropTypes.object,\n\n    /**\n     * Enables use of `href` property to provide a URL to link to if set to true.\n     */\n    linkButton: React.PropTypes.bool,\n\n    /**\n     * Callback function fired when the element is focused or blurred by the keyboard.\n     *\n     * @param {object} event `focus` or `blur` event targeting the element.\n     * @param {boolean} isKeyboardFocused Indicates whether the element is focused.\n     */\n    onKeyboardFocus: React.PropTypes.func,\n\n    /**\n     * Callback function fired when the mouse enters the element.\n     *\n     * @param {object} event `mouseenter` event targeting the element.\n     */\n    onMouseEnter: React.PropTypes.func,\n\n    /**\n     * Callback function fired when the mouse leaves the element.\n     *\n     * @param {object} event `mouseleave` event targeting the element.\n     */\n    onMouseLeave: React.PropTypes.func,\n\n    /**\n     * Callback function fired when the element is touched.\n     *\n     * @param {object} event `touchstart` event targeting the element.\n     */\n    onTouchStart: React.PropTypes.func,\n\n    /**\n     * If true, colors button according to\n     * primaryTextColor from the Theme.\n     */\n    primary: React.PropTypes.bool,\n\n    /**\n     * Color for the ripple after button is clicked.\n     */\n    rippleColor: React.PropTypes.string,\n\n    /**\n     * If true, colors button according to secondaryTextColor from the theme.\n     * The primary prop has precendent if set to true.\n     */\n    secondary: React.PropTypes.bool,\n\n    /**\n     * Override the inline-styles of the root element.\n     */\n    style: React.PropTypes.object,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    labelStyle: {},\n    labelPosition: 'after',\n    onKeyboardFocus: () => {},\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onTouchStart: () => {},\n    primary: false,\n    secondary: false,\n  };\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n  };\n\n  state = {\n    hovered: false,\n    isKeyboardFocused: false,\n    touch: false,\n  };\n\n  handleKeyboardFocus = (event, isKeyboardFocused) => {\n    this.setState({isKeyboardFocused: isKeyboardFocused});\n    this.props.onKeyboardFocus(event, isKeyboardFocused);\n  };\n\n  handleMouseEnter = (event) => {\n    //Cancel hover styles for touch devices\n    if (!this.state.touch) this.setState({hovered: true});\n    this.props.onMouseEnter(event);\n  };\n\n  handleMouseLeave = (event) => {\n    this.setState({hovered: false});\n    this.props.onMouseLeave(event);\n  };\n\n  handleTouchStart = (event) => {\n    this.setState({touch: true});\n    this.props.onTouchStart(event);\n  };\n\n  render() {\n    const {\n      children,\n      disabled,\n      hoverColor,\n      backgroundColor,\n      icon,\n      label,\n      labelStyle,\n      labelPosition,\n      linkButton,\n      primary,\n      rippleColor,\n      secondary,\n      style,\n      ...other,\n    } = this.props;\n\n    const {\n      button: {\n        height: buttonHeight,\n        minWidth: buttonMinWidth,\n        textTransform: buttonTextTransform,\n      },\n      flatButton: {\n        buttonFilterColor,\n        color: buttonColor,\n        disabledTextColor,\n        fontSize,\n        fontWeight,\n        primaryTextColor,\n        secondaryTextColor,\n        textColor,\n        textTransform = buttonTextTransform || 'uppercase',\n      },\n    } = this.context.muiTheme;\n    const defaultTextColor = disabled ? disabledTextColor :\n      primary ? primaryTextColor :\n      secondary ? secondaryTextColor :\n      textColor;\n\n    const defaultHoverColor = fade(buttonFilterColor, 0.2);\n    const defaultRippleColor = buttonFilterColor;\n    const buttonHoverColor = hoverColor || defaultHoverColor;\n    const buttonRippleColor = rippleColor || defaultRippleColor;\n    const buttonBackgroundColor = backgroundColor || buttonColor;\n    const hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;\n\n    const mergedRootStyles = Object.assign({}, {\n      color: defaultTextColor,\n      transition: transitions.easeOut(),\n      fontSize: px2rem(fontSize),\n      letterSpacing: 0,\n      textTransform: textTransform,\n      fontWeight: fontWeight,\n      borderRadius: 2,\n      userSelect: 'none',\n      position: 'relative',\n      overflow: 'hidden',\n      backgroundColor: hovered ? buttonHoverColor : buttonBackgroundColor,\n      lineHeight: `${px2rem(buttonHeight)}`,\n      minWidth: px2rem(buttonMinWidth),\n      padding: 0,\n      margin: 0,\n      // That's the default value for a button but not a link\n      textAlign: 'center',\n    }, style);\n\n    let iconCloned;\n    const labelStyleIcon = {};\n\n    if (icon) {\n      iconCloned = React.cloneElement(icon, {\n        color: mergedRootStyles.color,\n        style: {\n          lineHeight: `${px2rem(buttonHeight)}`,\n          verticalAlign: 'middle',\n          marginLeft: label && labelPosition !== 'before' ? px2rem(12):0, //12 : 0,\n          marginRight: label && labelPosition === 'before' ? px2rem(12):0, //12 : 0,\n        },\n      });\n\n      if (labelPosition === 'before') {\n        labelStyleIcon.paddingRight = px2rem(8)//8;\n      } else {\n        labelStyleIcon.paddingLeft = px2rem(8)//8;\n      }\n    }\n\n    const labelElement = label ? (\n      <FlatButtonLabel label={label} style={Object.assign({}, labelStyleIcon, labelStyle)} />\n    ) : undefined;\n\n    // Place label before or after children.\n    const childrenFragment = labelPosition === 'before' ?\n    {\n      labelElement,\n      iconCloned,\n      children,\n    } :\n    {\n      children,\n      iconCloned,\n      labelElement,\n    };\n\n    const enhancedButtonChildren = createChildFragment(childrenFragment);\n\n    return (\n      <EnhancedButton\n        {...other}\n        disabled={disabled}\n        focusRippleColor={buttonRippleColor}\n        focusRippleOpacity={0.3}\n        linkButton={linkButton}\n        onKeyboardFocus={this.handleKeyboardFocus}\n        onMouseLeave={this.handleMouseLeave}\n        onMouseEnter={this.handleMouseEnter}\n        onTouchStart={this.handleTouchStart}\n        style={mergedRootStyles}\n        touchRippleColor={buttonRippleColor}\n        touchRippleOpacity={0.3}\n      >\n        {enhancedButtonChildren}\n      </EnhancedButton>\n    );\n  }\n}\n\nexport default FlatButton;\n"}});